#!/bin/bash
############################################################################################################################
#           MODULE LOAD 
############################################################################################################################
castScript='castem21'
module load castem-public $castScript
############################################################################################################################
#           SCRIPT .dgibi
############################################################################################################################
script='raideur_Ccone_UNI.dgibi'
############################################################################################################################
#           DIRECTORIES
############################################################################################################################
#% CALCDIR :
calcdir="../P11_nut_1_jeurad"

   mkdir "$calcdir"
   mkdir "$calcdir/fig/"
   mkdir "$calcdir/data/"
############################################################################################################################
#           PARAMETERS (5)
############################################################################################################################
# NB_ROTA = circle discretisation
# nbrota=(32 64 128 256 512 1024)
# nbrota=(64 128 256 512 1024)
nbrota=(600)
# nutation
# nut=(0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. 2. 3. 4. 5. 6. 7. 8. 9. 10.) 
#% NUTVAL : 
nut=(1.)

# test refined (P41 P42 P51 P52):
# d=(0.0475020723 0.0477360727)

# manchette a plat :
# d=(0.0468)

# ic3_parab , ic3_M, ic3_hertz : (pour nut = 0.1)
# d=(0.0468468714 0.0468066233 0.0468000713)

# 4 corners : 
    # nut = 0.01 :
# d=(0.0468009367 0.0477360007)
    # nut = 0.1 :
# d=(0.0468010073 0.0477360727)
    # nut = 0.5 :
# d=(0.0468027181 0.0477378177)
# d=(0.0468027181)
    # nut = 1. :
# d=(0.0468080651 0.0477432715)
d=(0.0468080651)

# test incidence (nut = 0.5) : 
# d=(0.04680178206845)

# test incidence (Rcurv = 1.001*Rcirc): lnut = (1.05, 1.1, 1.2, 1.3, 1.5, 1.8, 2.5, 5.)

# Si test incid (Rcurv = 1.001*Rcirc): Rcurv/Rcirc = 1 en 0° pour d = :
# d=(0.0468078598)
# d=(0.0468086263)
# d=(0.0468102663)
# d=(0.046812049)
# d=(0.0468160427)
# d=(0.0468231044)
# d=(0.0468445857)
# d=(0.0469787684)

#%% test refined, (pour nut = 0.1°) : 
# P41 (1468) :
    # d=(0.0475020723)
    # dimp=(2.e-7)
# P42 (329) :
    # d=(0.0475020723)
    # dimp=(2.5e-06)
# P51 (941) :
    # d=(0.0477360727)
    # dimp=(2.e-7)
# P52 (288) :
    # d=(0.0477360727)
    # dimp=(2.5e-06)

#%% 4 corners : nut = 0.1
# P11 (1031)
    # d=(0.0468010073)
    # dimp=(2.e-7)
# P15 (1689)
    # d=(0.0468010073)
    # dimp=(10.e-6)
# P51 (941) :
    # d=(0.0477360727)
    # dimp=(2.e-7)
# P55 (1836) 
    # d=(0.0477360727)
    # dimp=(10.e-6)

#%% 4 corners : nut = 0.5
# P11 
    # d=(0.0468027181) 
    # dimp=(2.e-7)
# P15 
    # d=(0.0468027181) 
    # dimp=(10.e-6)
# P51 
    # d=(0.0477378177) 
    # dimp=(2.e-7)
# P55  
    # d=(0.0477378177) 
    # dimp=(10.e-6)

#% NUT 0.00
# d=(0.0468 0.04680468 0.04680936 0.04681404 0.04681872 0.0468234 0.04682808 0.04683276 0.04683744 0.04684212 0.0468468 0.0468936 0.0469404 0.0469872 0.047034 0.0470808 0.0471276 0.0471744 0.0472212 0.047268 0.0473148 0.0473616 0.0474084 0.0474552 0.047502 0.0475488 0.0475956 0.0476424 0.0476892 0.047736)

#% NUT 0.01
# d=(0.0468000007 0.0468009367 0.0468018727 0.0468028087 0.0468037447 0.0468046807 0.0468056167 0.0468065527 0.0468074887 0.0468084247 0.0468093607 0.0468102967 0.0468112327 0.0468121687 0.0468131047 0.0468140407 0.0468149767 0.0468159127 0.0468168487 0.0468177847 0.0468187207 0.0468196567 0.0468205927 0.0468215287 0.0468224647 0.0468234007 0.0468243367 0.0468252727 0.0468262087 0.0468271447 0.0468280807 0.0468290167 0.0468299527 0.0468308887 0.0468318247 0.0468327607 0.0468336967 0.0468346327 0.0468355687 0.0468365047 0.0468374407 0.0468383767 0.0468393127 0.0468402487 0.0468411847 0.0468421207 0.0468430567 0.0468439927 0.0468449287 0.0468458647 0.0468468007 0.0468936007 0.0469404007 0.0469872007 0.0470340007 0.0470808007 0.0471276007 0.0471744007 0.0472212007 0.0472680007 0.0473148007 0.0473616007 0.0474084007 0.0474552007 0.0475020007 0.0475488007 0.0475956007 0.0476424007 0.0476892007 0.0477360007)

#% NUT 0.05
# d=(0.0468000178 0.0468046978 0.0468093778 0.0468140578 0.0468187378 0.0468234178 0.0468280978 0.0468327778 0.0468374578 0.0468421378 0.0468468178 0.0468936179 0.0469404179 0.0469872179 0.0470340179 0.0470808179 0.0471276179 0.047174418 0.047221218 0.047268018 0.047314818 0.047361618 0.0474084181 0.0474552181 0.0475020181 0.0475488181 0.0475956181 0.0476424181 0.0476892182 0.0477360182)

#% NUT 0.10
# d=(0.0468000713 0.0468010073 0.0468019433 0.0468028793 0.0468038153 0.0468047513 0.0468056873 0.0468066233 0.0468075593 0.0468084953 0.0468094313 0.0468103673 0.0468113033 0.0468122393 0.0468131753 0.0468141113 0.0468150473 0.0468159833 0.0468169193 0.0468178553 0.0468187913 0.0468197273 0.0468206633 0.0468215993 0.0468225353 0.0468234713 0.0468244073 0.0468253433 0.0468262793 0.0468272153 0.0468281513 0.0468290873 0.0468300233 0.0468309593 0.0468318953 0.0468328313 0.0468337673 0.0468347033 0.0468356393 0.0468365753 0.0468375113 0.0468384473 0.0468393833 0.0468403193 0.0468412553 0.0468421913 0.0468431273 0.0468440633 0.0468449993 0.0468459354 0.0468468714 0.0468936714 0.0469404715 0.0469872716 0.0470340716 0.0470808717 0.0471276718 0.0471744719 0.0472212719 0.047268072 0.0473148721 0.0473616721 0.0474084722 0.0474552723 0.0475020723 0.0475488724 0.0475956725 0.0476424726 0.0476892726 0.0477360727)

# 0.1 refined :
# only > 1.001*R_tete
# d=(0.047268072 0.0473148721 0.0473616721 0.0474084722 0.0474552723 0.0475020723 0.0475488724 0.0475956725 0.0476424726 0.0476892726 0.0477360727 0.0477828728 0.0478296728 0.0478764729 0.047923273)
# all + refined between 1. and 1.002
# d=(0.0468000713 0.0468047513 0.0468094313 0.0468141113 0.0468187913 0.0468234713 0.0468281513 0.0468328313 0.0468375113 0.0468421913 0.0468468714 0.0468515514 0.0468562314 0.0468609114 0.0468655914 0.0468702714 0.0468749514 0.0468796314 0.0468843114 0.0468889914 0.0468936714 0.0469404715 0.0469872716 0.0470340716 0.0470808717 0.0471276718 0.0471744719 0.0472212719 0.047268072 0.0473148721 0.0473616721 0.0474084722 0.0474552723 0.0475020723 0.0475488724 0.0475956725 0.0476424726 0.0476892726 0.0477360727)
# classic : 
# d=(0.0468000713 0.0468047513 0.0468094313 0.0468141113 0.0468187913 0.0468234713 0.0468281513 0.0468328313 0.0468375113 0.0468421913 0.0468468714 0.0468936714 0.0469404715 0.0469872716 0.0470340716 0.0470808717 0.0471276718 0.0471744719 0.0472212719 0.047268072 0.0473148721 0.0473616721 0.0474084722 0.0474552723 0.0475020723 0.0475488724 0.0475956725 0.0476424726 0.0476892726 0.0477360727)
# supplementary low Rcurvs :
# d=(0.0468000713 0.0468010073 0.0468019433 0.0468028793 0.0468038153 0.0468047513 0.0468056873 0.0468066233 0.0468075593 0.0468084953 0.0468094313 0.0468103673 0.0468113033 0.0468122393 0.0468131753 0.0468141113 0.0468150473 0.0468159833 0.0468169193 0.0468178553 0.0468187913 0.0468197273 0.0468206633 0.0468215993 0.0468225353 0.0468234713 0.0468244073 0.0468253433 0.0468262793 0.0468272153 0.0468281513 0.0468290873 0.0468300233 0.0468309593 0.0468318953 0.0468328313 0.0468337673 0.0468347033 0.0468356393 0.0468365753 0.0468375113 0.0468384473 0.0468393833 0.0468403193 0.0468412553 0.0468421913 0.0468431273 0.0468440633 0.0468449993 0.0468459354 0.0468468714 0.0468936714 0.0469404715 0.0469872716 0.0470340716 0.0470808717 0.0471276718 0.0471744719 0.0472212719 0.047268072 0.0473148721 0.0473616721 0.0474084722 0.0474552723 0.0475020723 0.0475488724 0.0475956725 0.0476424726 0.0476892726 0.0477360727)
# indiv pour le point :
# d=(0.0477360727)

#% NUT 0.20
# d=(0.0468002851 0.0468049652 0.0468096452 0.0468143252 0.0468190052 0.0468236853 0.0468283653 0.0468330453 0.0468377254 0.0468424054 0.0468470854 0.0468938857 0.046940686 0.0469874863 0.0470342865 0.0470810868 0.0471278871 0.0471746874 0.0472214877 0.047268288 0.0473150883 0.0473618885 0.0474086888 0.0474554891 0.0475022894 0.0475490897 0.04759589 0.0476426903 0.0476894905 0.0477362908)

#% NUT 0.30
# d=(0.0468006415 0.0468053216 0.0468100017 0.0468146817 0.0468193618 0.0468240419 0.0468287219 0.046833402 0.046838082 0.0468427621 0.0468474422 0.0468942428 0.0469410435 0.0469878441 0.0470346447 0.0470814454 0.047128246 0.0471750467 0.0472218473 0.0472686479 0.0473154486 0.0473622492 0.0474090499 0.0474558505 0.0475026512 0.0475494518 0.0475962524 0.0476430531 0.0476898537 0.0477366544)

#% NUT 0.40
# d=(0.0468011405 0.0468058206 0.0468105007 0.0468151809 0.046819861 0.0468245411 0.0468292212 0.0468339013 0.0468385814 0.0468432615 0.0468479417 0.0468947428 0.0469415439 0.0469883451 0.0470351462 0.0470819474 0.0471287485 0.0471755496 0.0472223508 0.0472691519 0.0473159531 0.0473627542 0.0474095553 0.0474563565 0.0475031576 0.0475499588 0.0475967599 0.047643561 0.0476903622 0.0477371633)

#% NUT 0.50
# d=(0.0468017821 0.0468064622 0.0468111424 0.0468158226 0.0468205028 0.046825183 0.0468298631 0.0468345433 0.0468392235 0.0468439037 0.0468485839 0.0468953856 0.0469421874 0.0469889892 0.047035791 0.0470825928 0.0471293945 0.0471761963 0.0472229981 0.0472697999 0.0473166017 0.0473634035 0.0474102052 0.047457007 0.0475038088 0.0475506106 0.0475974124 0.0476442141 0.0476910159 0.0477378177)

#% NUT 0.80
# d=(0.0468045623 0.0468092428 0.0468139232 0.0468186037 0.0468232841 0.0468279646 0.0468326451 0.0468373255 0.046842006 0.0468466864 0.0468513669 0.0468981714 0.046944976 0.0469917806 0.0470385851 0.0470853897 0.0471321943 0.0471789988 0.0472258034 0.0472726079 0.0473194125 0.0473662171 0.0474130216 0.0474598262 0.0475066308 0.0475534353 0.0476002399 0.0476470444 0.047693849 0.0477406536)

#% NUT 1.00
# d=(0.046807129 0.0468080651 0.0468090012 0.0468099374 0.0468108735 0.0468118097 0.0468127458 0.046813682 0.0468146181 0.0468155542 0.0468164904 0.0468174265 0.0468183627 0.0468192988 0.0468202349 0.0468211711 0.0468221072 0.0468230434 0.0468239795 0.0468249157 0.0468258518 0.0468267879 0.0468277241 0.0468286602 0.0468295964 0.0468305325 0.0468314687 0.0468324048 0.0468333409 0.0468342771 0.0468352132 0.0468361494 0.0468370855 0.0468380217 0.0468389578 0.0468398939 0.0468408301 0.0468417662 0.0468427024 0.0468436385 0.0468445747 0.0468455108 0.0468464469 0.0468473831 0.0468483192 0.0468492554 0.0468501915 0.0468511277 0.0468520638 0.0468529999 0.0468539361 0.0469007432 0.0469475503 0.0469943575 0.0470411646 0.0470879717 0.0471347789 0.047181586 0.0472283931 0.0472752002 0.0473220074 0.0473688145 0.0474156216 0.0474624288 0.0475092359 0.047556043 0.0476028501 0.0476496573 0.0476964644 0.0477432715)

#% DIND :
# d=(${d[5]})

# angle d'incidence / centre de l'ellipse
# thi=(0. 10. 20. 30. 40. 50. 60. 70. 80. 90. 100. 110. 120. 130. 140. 150. 160. 170. 180.)
# thi=(0. 45. 90. 135. 180.)

thi=(0.)

# test incidence (Rcurv = 1.001*Rcirc):
# thi=(84.808736887)
# thi=(71.9163137311)
# thi=(60.6142914794)
# thi=(53.5387811712)
# thi=(44.180857407)
# thi=(35.4945248882)
# thi=(24.6913604795)
# thi=(11.9973084057)

# test incidence (Nut = 0.5):
# thi=(24.73369 46.44285 62.56732)
# thi=(24.73369 46.44285 62.56732)
# thi=( 0.  5. 10. 15. 20. 25. 30. 35. 40. 45. 50. 60. 70. 80. 90.)
    # miss
# thi=(45. 70.)

# depl. imp 
# dimp=(1.e-07 2.e-07 3.e-07 4.e-07 5.e-07 6.e-07 7.e-07 8.e-07 9.e-07)
# D1 :
# dimp=(2.e-08 4.e-08 6.e-08 8.e-08 1.e-07 2.e-07 3.e-07 4.e-07 5.e-07 6.e-07 7.e-07 8.e-07 9.e-07 1.e-6 2.e-6 4.e-6 10.e-6)
# D2 :
# dimp=(1.e-07 2.e-07 3.e-07 4.e-07 5.e-07 6.e-07 7.e-07 8.e-07 9.e-07)
 
# dimp=(3.e-6 3.5e-6 4.5e-6 5.e-6 5.5e-6 6.e-6 6.5e-6 7.e-6)
# dimp=(1.1e-06 1.2e-06 1.3e-06 1.4e-06 1.5e-06 1.6e-06 1.7e-06 1.8e-06 1.9e-06 2.5e-06 7.5e-06 8e-06 8.5e-06 9e-06 9.5e-06)
# Refined : (dimp < 5 microns)
# classic : 
# dimp=(2.0e-08 4.0e-08 6.0e-08 8.0e-08 1.0e-07 2.0e-07 3.0e-07 4.0e-07 5.0e-07 6.0e-07 7.0e-07 8.0e-07 9.0e-07 1.0e-06 1.1e-06 1.2e-06 1.3e-06 1.4e-06 1.5e-06 1.6e-06 1.7e-06 1.8e-06 1.9e-06 2.0e-06 2.5e-06 3.0e-06 3.5e-06 4.0e-06 4.5e-06 5.0e-06 5.5e-6 6.e-6 6.5e-6 7.e-6 7.5e-6 8.e-6 8.5e-6 9.e-6 9.5e-6 10.e-6)

# test incidence : 
# dimp=(1.e-6 2.e-6 5.e-6 10.e-6)

# IC3 : 
# dimp=(2.e-7 5.e-6 10.e-6)

# test incidence nut = 0.5 :
# dimp=(10.e-6)

# 4 corners :
# dimp=(2.e-7 10.e-6)
dimp=(2.e-7)

# test refined :
# dimp=(2.e-7 2.5e-6)

# A PLAT :
# dimp=(2.e-7 4.e-7 6e-7 8.e-7 1.e-6 2.e-6 4.e-6 5.e-6 7.e-6 10.e-6)

#% DIMP : 
# si creamiss, insertion ici

# lists lengths
length_nbrota=${#nbrota[@]}
length_nut=${#nut[@]}
length_d=${#d[@]}
length_thi=${#thi[@]}
length_dimp=${#dimp[@]}
length_tot=$((${length_nbrota}*${length_nut}*${length_d}*${length_thi}*${length_dimp}))
echo "Nombre total de calculs prevus : $length_tot"

############################################################################################################################
#           CHGMT DE PROC TOUS LES Lsample calculs
############################################################################################################################
# lproc=('intelq_5118' 'gpuq_5218' 'intelq_6234' 'amdq_rome' 'amdq_naples')
    # on vire 'intelq_6226' car il a pas de RAM !!
# lproc=('intelq_5118' 'gpuq_5218' 'intelq_6234' 'amdq_rome' 'amdq_naples')
lproc=('amdq_rome') 
length_lproc=${#lproc[@]}
Lsample=$((length_tot/length_lproc))
j=$(grep -in "#\%.*PROC" launch_1.sh | cut -d':' -f1)
i_proc=$((j+1))
# On va en fait lancer les calculs 100 par 100 avec un Lsample de 20 :
# Lsample=20
echo " changement de proc. tous les $Lsample calculs."
# proc. definition line in launch_1.sh :

echo "proc. definition line = $i_proc"
    # on remet le proc au 1er de la liste pr le deb de calcl :
sed -i "${i_proc}s/.*/#SBATCH\ \-p\ ${lproc[0]}/g" launch_1.sh
echo "SART with ${lproc[0]}"
############################################################################################################################
#           NBR DE COEURS / CALC
############################################################################################################################
# si nb_rota est trop eleve, on augmente el nbr de coeur
k=$(grep -in "#\%.*CORE" launch_1.sh | cut -d':' -f1)
i_core=$((k+1))
echo "core definition line = $i_core"
# on prend un nombre de coeur intiale = 5
lcore=(8 16 22)
sed -i "${i_core}s/.*/#SBATCH\ \-c\ ${lcore[1]}/g" launch_1.sh
############################################################################################################################
#           NAME & LOCATIONS OF PARAM. IN .dgibi
############################################################################################################################

# nbrota : 
i=$(grep -in "*#.*NB_ROTA" $script | cut -d':' -f1)
i_nbrota=$((i+1))
name_nbrota=$(grep -in1 "*#.*NB_ROTA" $script | grep "=" | sed "s/\*\#/%/g" | cut -d'%' -f2 | cut -d'-' -f2 | cut -d'=' -f1)
echo "notation pour le NB_ROTA: ${name_nbrota}, donne L : ${i_nbrota}"
# nutation :
j=$(grep -in "*#.*THETA_NUT" $script | cut -d':' -f1)
i_nut=$((j+1))
name_nut=$(grep -in1 "*#.*THETA_NUT" $script | grep "=" | sed "s/\*\#/%/g" | cut -d'%' -f2 | cut -d'-' -f2 | cut -d'=' -f1)
echo "notation pour THETA_NUT : ${name_nut}, donne L : ${i_nut}"
# d = altitude : 
k=$(grep -in "*#.*ZC" $script | cut -d':' -f1)
i_d=$((k+1))
name_d=$(grep -in1 "*#.*ZC" $script | grep "=" | sed "s/\*\#/%/g" | cut -d'%' -f2 | cut -d'-' -f2 | cut -d'=' -f1)
echo "notation pour le ZC: ${name_d}, donne L : ${i_d}"
# dimp = depl. imp
l=$(grep -in "*#.*DIMP" $script | cut -d':' -f1)
i_dimp=$((l+1))
name_dimp=$(grep -in1 "*#.*DIMP" $script | grep "=" | sed "s/\*\#/%/g" | cut -d'%' -f2 | cut -d'-' -f2 | cut -d'=' -f1)
echo "notation pour le DIMP: ${name_dimp}, donne L : ${i_dimp}"
# incidence
m=$(grep -in "*#.*INCID" $script | cut -d':' -f1)
i_thi=$((m+1))
name_thi=$(grep -in1 "*#.*INCID" $script | grep "=" | sed "s/\*\#/%/g" | cut -d'%' -f2 | cut -d'-' -f2 | cut -d'=' -f1)
echo "notation pour le INCID: ${name_thi}, donne L : ${i_thi}"

echo "Debut du calcul dans 15s ... CHECKEZ LES DONNES"
sleep 1

############################################################################################################################
#           LIMITE DE TEMPS POUR LE CALCUL
############################################################################################################################

time_lim="0-02:30:00"
############################################################################################################################
#           LOOP
############################################################################################################################
ntranche=1
nproc=1
compt_calc=0
for el_nbrota in "${nbrota[@]}"
do 
    sed -i "${i_nbrota}s/.*/${name_nbrota}=\ $el_nbrota\ \;/g" $script
    echo "Calcul pour NB_ROTA = $el_nbrota"
    # eventuellement, on augmente le nbr de coeurs / calc
    if [ $el_nbrota -ge 500 -a $el_nbrota -lt 1000 ] ; then
      sed -i "${i_core}s/.*/#SBATCH\ \-c\ ${lcore[1]}/g" launch_1.sh
    elif [ $el_nbrota -ge 1000 ] ; then
      sed -i "${i_core}s/.*/#SBATCH\ \-c\ ${lcore[2]}/g" launch_1.sh
    fi
    # temps limite de calcul :
    if [ $el_nbrota -le 300 ] ; then
        time_lim=$time_lim
    else
        time_lim=$time_lim
    fi
    for el_thi in "${thi[@]}"
    do 
        # si incidence nulle on prend nb_rota = 400 (sinon calcul bloque!)
        # if (( $(echo "$el_thi == 0." | bc -l) )) || (( $(echo "$el_thi == 180." | bc -l) )) & [ $el_nbrota -gt 400 ] ; then
        if (( $(echo "$el_thi == 0." | bc -l) )) || (( $(echo "$el_thi == 180." | bc -l) )) ; then
            # OLD : on remplacait nb_rota mais on a maintenant un modele refined :
            # sed -i "${i_nbrota}s/.*/${name_nbrota}=\ 400\ \;/g" $script
            # echo "NB_ROTA = 400 pour incidence 0. ou 180. !!"
            time_lim=$time_lim
        else 
            # On remet la valeur de NB_ROTA voulue
            sed -i "${i_nbrota}s/.*/${name_nbrota}=\ $el_nbrota\ \;/g" $script
            time_lim=$time_lim
            echo "NB_ROTA = $el_nbrota de nouveau"
        fi
        # on remplace l angle d incidence :
        sed -i "${i_thi}s/.*/${name_thi}=\ $el_thi\ \;/g" $script
        echo "  Calcul pour INCID = $el_thi"
        for el_nut in "${nut[@]}"
        do 
            sed -i "${i_nut}s/.*/${name_nut}=\ $el_nut\ \;/g" $script
            echo "      Calcul pour THETA_NUT = $el_nut"
            for el_d in "${d[@]}"
            do 
                sed -i "${i_d}s/.*/${name_d}=\ $el_d\ \;/g" $script
                echo "          Calcul pour ZC = $el_d"
                for el_dimp in "${dimp[@]}"
                do 
                    sed -i "${i_dimp}s/.*/${name_dimp}=\ $el_dimp\ \;/g" $script
                    echo "              Calcul pour DIMP = $el_dimp"
                    compt_calc=$((compt_calc+1))
                    # eventuellement, chgmt de proc.
                    if [ $nproc -lt $length_lproc -a $compt_calc -ge $((nproc*Lsample)) ] ; then
                        echo "compt_calc = $compt_calc"
                        echo "val = $((nproc*Lsample))"
                        echo "on change de proc --> ${lproc[$nproc]}"
                        sed -i "${i_proc}s/.*/#SBATCH\ \-p ${lproc[$nproc]}/g" launch_1.sh
                        echo "proc. remplace"
                        # on incremente nproc
                        nproc=$((nproc+1))
                    fi
                    # creation newdir
                    newdir=$calcdir"/calc_$compt_calc"
                    # newdir=$calcdir"/calc_$el_thi"
                    mkdir $newdir
                    mkdir $newdir/VTK
                    mkdir $newdir/xdr_comp
                    cp -p $script $newdir
                    cp -p launch_1.sh $newdir
                    # lancement du calcul dans newdir
                        # Job Name : 
                    # jobname="N${el_nut}D${el_d}DI${el_dimp}"
                    jobname="calc_$compt_calc"
                    cd $newdir
                    sbatch -J $jobname --time=$time_lim launch_1.sh $script &
                    cd -
                    # decompte
                    echo "calcul $compt_calc / $length_tot started."
                    # if [ $compt_calc -ge $((ntranche*100)) ] ; then
                    #   ntranche=$((ntranche+1))
                    #   echo "WAITING 10 mins..."
                    #   sleep 600
                    # fi
                done
            done
        done
    done
done

exit 0
